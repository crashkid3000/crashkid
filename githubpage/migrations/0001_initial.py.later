# Generated by Django 2.2.9 on 2020-05-10 20:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contentpages', '0003_auto_20200510_2241'),
    ]

    operations = [
        migrations.CreateModel(
            name='GitHubRepo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the repository', max_length=100, null=True, verbose_name='Name')),
                ('owner_name', models.CharField(help_text='The name of the owner of this repository', max_length=100, null=True, verbose_name='Owner')),
                ('owner_id', models.IntegerField(default=-1, help_text='The ID of the repository owner', verbose_name='Owner ID')),
                ('access_status', models.CharField(choices=[('privat', 'ðŸ”’'), ('public', 'ðŸ”“')], max_length=6, null=True, verbose_name='Access status')),
                ('description', models.CharField(blank=True, help_text='The description of the repo. NOT the readme file!', max_length=500, null=True, verbose_name='Description')),
                ('created_on', models.DateTimeField(blank=True, help_text='When this repo was created', null=True, verbose_name='Created on')),
                ('last_updated', models.DateTimeField(blank=True, help_text="When the repo recieved it's last update", null=True, verbose_name='Last updated on')),
                ('size', models.IntegerField(blank=True, help_text='Size of the repo in kiB. Divide by 1024 to get the size displayed in github.com/settings/repositories.', null=True, verbose_name='Size')),
                ('language', models.CharField(help_text='The programming language used in this repo', max_length=50, null=True, verbose_name='Language')),
                ('issues', models.IntegerField(help_text='# of open issues for this repo', null=True, verbose_name='Open issues')),
                ('forks', models.IntegerField(help_text='# of forks for this repo', null=True, verbose_name='Forks')),
                ('stargazers', models.IntegerField(help_text='# of stargazers', null=True, verbose_name='Stargazers')),
                ('subscribers', models.IntegerField(help_text='# of subscribers', null=True, verbose_name='Subscribers')),
                ('object_last_updated', models.DateTimeField(auto_now_add=True, help_text='When this object was last updated', verbose_name='last update of object')),
                ('repo_url', models.URLField(help_text='A link to the repo', null=True, verbose_name='Link to the repo')),
            ],
        ),
        migrations.CreateModel(
            name='GitHubRepoPage',
            fields=[
                ('extendablecontentpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='contentpages.ExtendableContentPage')),
                ('repo_owner', models.CharField(help_text='The name of the owner of this repository', max_length=100, null=True, verbose_name='Owner')),
                ('repo_name', models.CharField(help_text='The name of the repository', max_length=100, null=True, verbose_name='Name')),
                ('repo', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='githubpage.GitHubRepo')),
            ],
            options={
                'verbose_name': 'GitHub Repo Page',
            },
            bases=('contentpages.extendablecontentpage',),
        ),
    ]
