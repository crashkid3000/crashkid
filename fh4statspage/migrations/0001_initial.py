# Generated by Django 2.2.9 on 2020-05-10 20:41

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='FHStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playtime', models.IntegerField(default=-1, help_text='Time spent playing the game in minutes.', verbose_name='Playtime')),
                ('cars_owned', models.IntegerField(default=-1, help_text='Number of cars in the garage.', verbose_name='Cars Owned')),
                ('influence', models.IntegerField(default=-1, help_text='How much influence was earned.', verbose_name='Influence')),
                ('object_last_updated', models.DateTimeField(auto_now_add=True, help_text='When this object was last updated', verbose_name='last update of object')),
            ],
        ),
        migrations.CreateModel(
            name='FHStatsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('game', models.CharField(choices=[('FH3', 'Forza Horizon 3'), ('FH4', 'Forza Horizon 4')], help_text='The game this page is for', max_length=3, null=True, verbose_name='Game')),
                ('tunings_released', models.IntegerField(blank=True, help_text='How many tunings were released.', verbose_name='Tunings released')),
                ('designs_released', models.IntegerField(blank=True, help_text='How many designs were released.', verbose_name='Designs released')),
                ('events_released', models.IntegerField(blank=True, help_text='How many events were published.', verbose_name='Events released')),
                ('tunings_downloaded', models.IntegerField(blank=True, help_text='How many tunings were downloaded by others.', verbose_name='Tunings downloaded')),
                ('designs_downloaded', models.IntegerField(blank=True, help_text='How many designs were downloaded by others.', verbose_name='Designs downloaded')),
                ('events_played', models.IntegerField(blank=True, help_text='How many events were played by others.', verbose_name='Events driven by others')),
                ('tunings_favd', models.IntegerField(blank=True, help_text='How many tunings were favored by others.', verbose_name='Tunings favoured')),
                ('designs_favd', models.IntegerField(blank=True, help_text='How many designs were favored by others.', verbose_name='Designs favoured')),
                ('events_favd', models.IntegerField(blank=True, help_text='How many events were favored by others.', verbose_name='Events favoured')),
                ('cash', models.IntegerField(blank=True, help_text='How much cash is on the bank.', verbose_name='Cash')),
                ('total_income', models.IntegerField(blank=True, help_text='How much money was earned.', verbose_name='Total income')),
                ('garage_value', models.IntegerField(blank=True, help_text='The combined cash value of all cars,', verbose_name='Garage value')),
                ('total_skillpoints', models.IntegerField(blank=True, help_text='How many skillpoints were earned in total', verbose_name='Total skillpoints')),
                ('ultimate_skills', models.IntegerField(blank=True, help_text='How many ultimate skills were achieved', verbose_name='Ultimate skills')),
                ('highest_skillscore', models.IntegerField(blank=True, help_text='Highest skillscore combo achieved', verbose_name='Highest skillscore')),
                ('some_additional_text', wagtail.core.fields.RichTextField(blank=True, help_text='Some additional text that is displayed below the stats box', verbose_name='Additional text')),
                ('apistats', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fh4statspage.FHStats')),
            ],
            options={
                'verbose_name': 'Forza Stats Page',
            },
            bases=('wagtailcore.page',),
        ),
    ]
